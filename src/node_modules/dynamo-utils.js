const dynamoose = require('@connections/dynamodb');

function createTable(tableName, options) {
  
  return new Promise(function(resolve, reject) {
   
    tableExists(tableName).then(exists => {
      const Model = getModel(tableName, null, options);

      (function checkExists() {

        tableExists(tableName).then(modelExists => {
          if (modelExists) return resolve(Model);
          else setTimeout(checkExists, 2);
        }).catch(reject);

      })();

    });
  });
}

const tableCache = {};

function tableExists(tableName) {
  return new Promise(function(resolve, reject) {
    if (tableCache[tableName]) return resolve(true);
    dynamoose.ddb().listTables({}, function(err, data) {
      if (err) return reject(err);
      const exists = ((data.TableNames.filter(name => name === tableName)).length >0);
      console.log(`Table ${tableName} ` + (exists ? 'exists' : 'does not exist'));
      // we're only gonna cache known tables
      if (exists) tableCache[tableName] = tableName;
      resolve(exists);
    })
  });
}

function getModel(tableName, schema, options = {create:false, update:false}) {
  if (!schema) {
    schema = require('@models/' + tableName).schema;
  }
  return dynamoose.model(tableName, schema, options);
}

module.exports = {
  createTable,
  tableExists,
  getModel
}